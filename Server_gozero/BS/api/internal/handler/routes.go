// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.5

package handler

import (
	"net/http"

	SaleData "Server_gozero/BS/api/internal/handler/SaleData"
	activity "Server_gozero/BS/api/internal/handler/activity"
	farm "Server_gozero/BS/api/internal/handler/farm"
	login "Server_gozero/BS/api/internal/handler/login"
	order "Server_gozero/BS/api/internal/handler/order"
	product "Server_gozero/BS/api/internal/handler/product"
	userCenter "Server_gozero/BS/api/internal/handler/userCenter"
	"Server_gozero/BS/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/getLastOneYearSaleData",
				Handler: SaleData.GetLastOneYearSaleDataHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/getTotalData",
				Handler: SaleData.GetTotalDataHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/saleSummary",
				Handler: SaleData.SaleSummaryHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/AddActivity",
				Handler: activity.AddActivityHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/AddMainPic",
				Handler: activity.AddMainPicHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/AddPic",
				Handler: activity.AddPicHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/GetActivityDetail",
				Handler: activity.GetActivityDetailHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/GetMainPic",
				Handler: activity.GetMainPicHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/bindFarm",
				Handler: farm.BindFarmHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/getFarm",
				Handler: farm.GetFarmHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/updateFarmInfo",
				Handler: farm.UpdateFarmInfoHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/userLogin",
				Handler: login.LoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/getGoodOrder",
				Handler: order.GetGoodOrderHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/getLandOrder",
				Handler: order.GetLandOrderHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/addProduct",
				Handler: product.AddProductHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/delProduct",
				Handler: product.DelProductHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/getProduct",
				Handler: product.GetProductHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/test",
				Handler: product.TestHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/updateProduct",
				Handler: product.UpdateProductHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/getAdminInfo",
				Handler: userCenter.GetAdminHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/updateAdmin",
				Handler: userCenter.UpdateAdminHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/updateAvatar",
				Handler: userCenter.UpdateAvatarHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/updatePass",
				Handler: userCenter.UpdatePassHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/updatePhoneNumber",
				Handler: userCenter.UpdatePhoneNumberHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api"),
	)
}
