// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: BS.proto

package BS

import (
	"context"

	"Server_gozero/BS/rpc/BSRPC"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AddGoodDataReq  = BSRPC.AddGoodDataReq
	AddGoodDataResp = BSRPC.AddGoodDataResp
	AddLandDataReq  = BSRPC.AddLandDataReq
	AddLandDataResp = BSRPC.AddLandDataResp
	AddUserReq      = BSRPC.AddUserReq
	AddUserResp     = BSRPC.AddUserResp

	BS interface {
		AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*AddUserResp, error)
		AddLandData(ctx context.Context, in *AddLandDataReq, opts ...grpc.CallOption) (*AddLandDataResp, error)
		AddGoodData(ctx context.Context, in *AddGoodDataReq, opts ...grpc.CallOption) (*AddGoodDataResp, error)
	}

	defaultBS struct {
		cli zrpc.Client
	}
)

func NewBS(cli zrpc.Client) BS {
	return &defaultBS{
		cli: cli,
	}
}

func (m *defaultBS) AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*AddUserResp, error) {
	client := BSRPC.NewBSClient(m.cli.Conn())
	return client.AddUser(ctx, in, opts...)
}

func (m *defaultBS) AddLandData(ctx context.Context, in *AddLandDataReq, opts ...grpc.CallOption) (*AddLandDataResp, error) {
	client := BSRPC.NewBSClient(m.cli.Conn())
	return client.AddLandData(ctx, in, opts...)
}

func (m *defaultBS) AddGoodData(ctx context.Context, in *AddGoodDataReq, opts ...grpc.CallOption) (*AddGoodDataResp, error) {
	client := BSRPC.NewBSClient(m.cli.Conn())
	return client.AddGoodData(ctx, in, opts...)
}
