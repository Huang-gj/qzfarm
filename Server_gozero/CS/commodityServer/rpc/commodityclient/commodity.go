// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: commodity.proto

package commodityclient

import (
	"context"

	"Server_gozero/CS/commodityServer/rpc/commodity"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetGoodRepReq    = commodity.GetGoodRepReq
	GetGoodRepResp   = commodity.GetGoodRepResp
	GetLandRepReq    = commodity.GetLandRepReq
	GetLandRepResp   = commodity.GetLandRepResp
	UpdateRepReq     = commodity.UpdateRepReq
	UpdateRepResp    = commodity.UpdateRepResp
	UpdateStatusReq  = commodity.UpdateStatusReq
	UpdateStatusResp = commodity.UpdateStatusResp

	Commodity interface {
		GetGood(ctx context.Context, in *GetGoodRepReq, opts ...grpc.CallOption) (*GetGoodRepResp, error)
		UpdateRep(ctx context.Context, in *UpdateRepReq, opts ...grpc.CallOption) (*UpdateRepResp, error)
		GetLand(ctx context.Context, in *GetLandRepReq, opts ...grpc.CallOption) (*GetLandRepResp, error)
		UpdateStatus(ctx context.Context, in *UpdateStatusReq, opts ...grpc.CallOption) (*UpdateStatusResp, error)
	}

	defaultCommodity struct {
		cli zrpc.Client
	}
)

func NewCommodity(cli zrpc.Client) Commodity {
	return &defaultCommodity{
		cli: cli,
	}
}

func (m *defaultCommodity) GetGood(ctx context.Context, in *GetGoodRepReq, opts ...grpc.CallOption) (*GetGoodRepResp, error) {
	client := commodity.NewCommodityClient(m.cli.Conn())
	return client.GetGood(ctx, in, opts...)
}

func (m *defaultCommodity) UpdateRep(ctx context.Context, in *UpdateRepReq, opts ...grpc.CallOption) (*UpdateRepResp, error) {
	client := commodity.NewCommodityClient(m.cli.Conn())
	return client.UpdateRep(ctx, in, opts...)
}

func (m *defaultCommodity) GetLand(ctx context.Context, in *GetLandRepReq, opts ...grpc.CallOption) (*GetLandRepResp, error) {
	client := commodity.NewCommodityClient(m.cli.Conn())
	return client.GetLand(ctx, in, opts...)
}

func (m *defaultCommodity) UpdateStatus(ctx context.Context, in *UpdateStatusReq, opts ...grpc.CallOption) (*UpdateStatusResp, error) {
	client := commodity.NewCommodityClient(m.cli.Conn())
	return client.UpdateStatus(ctx, in, opts...)
}
