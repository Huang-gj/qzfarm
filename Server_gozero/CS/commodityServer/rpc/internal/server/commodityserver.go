// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.4
// Source: commodity.proto

package server

import (
	"context"

	"Server_gozero/CS/commodityServer/rpc/commodity"
	"Server_gozero/CS/commodityServer/rpc/internal/logic"
	"Server_gozero/CS/commodityServer/rpc/internal/svc"
)

type CommodityServer struct {
	svcCtx *svc.ServiceContext
	commodity.UnimplementedCommodityServer
}

func NewCommodityServer(svcCtx *svc.ServiceContext) *CommodityServer {
	return &CommodityServer{
		svcCtx: svcCtx,
	}
}

func (s *CommodityServer) GetGood(ctx context.Context, in *commodity.GetGoodRepReq) (*commodity.GetGoodRepResp, error) {
	l := logic.NewGetGoodLogic(ctx, s.svcCtx)
	return l.GetGood(in)
}

func (s *CommodityServer) UpdateRep(ctx context.Context, in *commodity.UpdateRepReq) (*commodity.UpdateRepResp, error) {
	l := logic.NewUpdateRepLogic(ctx, s.svcCtx)
	return l.UpdateRep(in)
}

func (s *CommodityServer) GetLand(ctx context.Context, in *commodity.GetLandRepReq) (*commodity.GetLandRepResp, error) {
	l := logic.NewGetLandLogic(ctx, s.svcCtx)
	return l.GetLand(in)
}

func (s *CommodityServer) UpdateStatus(ctx context.Context, in *commodity.UpdateStatusReq) (*commodity.UpdateStatusResp, error) {
	l := logic.NewUpdateStatusLogic(ctx, s.svcCtx)
	return l.UpdateStatus(in)
}
